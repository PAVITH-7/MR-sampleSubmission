You’re building a mini reporting tool for an online store. You’re given an array of orders; each order is a hash with:

:id — an integer order ID

:customer — the customer’s name (string)

:items — an array of item‑hashes; each item has:

:name (string)

:unit_price (float)

:quantity (integer)

Your tasks are to implement these methods (pick your own approach—loops, recursion, Enumerable, etc.):

# Total price of a single order
def order_total(order); end

# Sum of all orders’ totals
def total_revenue(orders); end

# Name of the customer who spent the most in total
def top_customer(orders); end

# Item name sold in the greatest total quantity across all orders
def best_selling_item(orders); end

# Average order value (Float)
def average_order_value(orders); end

# Array of orders (whole hashes) whose total >= amount
def orders_above(orders, amount); end

Sample Input :

orders = [
  {
    id: 1,
    customer: "Alice",
    items: [
      { name: "Book",     unit_price: 12.99, quantity: 2 },
      { name: "Pen",      unit_price:  1.49, quantity: 5 }
    ]
  },
  {
    id: 2,
    customer: "Bob",
    items: [
      { name: "Notebook", unit_price:  5.99, quantity: 3 }
    ]
  },
  {
    id: 3,
    customer: "Alice",
    items: [
      { name: "Pencil",   unit_price:  0.99, quantity: 10 }
    ]
  },
  {
    id: 4,
    customer: "Charlie",
    items: [
      { name: "Book",     unit_price: 12.99, quantity: 1 },
      { name: "Notebook", unit_price:  5.99, quantity: 2 }
    ]
  }
]





Sample Output:

order_total(orders[0])
# => 12.99*2 + 1.49*5   # => 33.43

total_revenue(orders)
# => 33.43 + 17.97 + 9.90 + 24.97  # => 86.27

top_customer(orders)
# => "Alice"   # (Alice spent 33.43 + 9.90 = 43.33)

best_selling_item(orders)
# => "Pencil"  # (10 pencils sold)

average_order_value(orders)
# => 86.27 / 4  # => 21.5675

orders_above(orders, 20)
# => [  
#      { id: 1, ... },  
#      { id: 2, ... },  
#      { id: 4, ... }  
#    ]

